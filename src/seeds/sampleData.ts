import { AppDataSource } from '../config/database';
import { PostType } from '../entities/PostType';
import { LawsRegsType } from '../entities/LawsRegsType';
import { PerfResultsType } from '../entities/PerfResultsType';
import { ProcurementPlanType } from '../entities/ProcurementPlanType';

export async function createSamplePostTypes() {
  try {
    const postTypeRepository = AppDataSource.getRepository(PostType);
    
    const samplePostTypes = [
      { type_name: '‡∏Ç‡πà‡∏≤‡∏ß‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå' },
      { type_name: '‡∏Ç‡πà‡∏≤‡∏ß‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°' },
      { type_name: '‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®' },
      { type_name: '‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£' }
    ];

    for (const typeData of samplePostTypes) {
      const existing = await postTypeRepository.findOne({
        where: { type_name: typeData.type_name }
      });

      if (!existing) {
        const postType = postTypeRepository.create(typeData);
        await postTypeRepository.save(postType);
        console.log(`‚úÖ Created Post Type: ${typeData.type_name}`);
      }
    }
  } catch (error) {
    console.error('‚ùå Error creating sample post types:', error);
  }
}

export async function createSampleLawsRegsTypes() {
  try {
    const lawsRegsTypeRepository = AppDataSource.getRepository(LawsRegsType);
    
    const sampleLawsRegsTypes = [
      { type_name: '‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏£‡∏á‡∏á‡∏≤‡∏ô' },
      { type_name: '‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°' },
      { type_name: '‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£' },
      { type_name: '‡∏Ç‡πâ‡∏≠‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö' }
    ];

    for (const typeData of sampleLawsRegsTypes) {
      const existing = await lawsRegsTypeRepository.findOne({
        where: { type_name: typeData.type_name }
      });

      if (!existing) {
        const lawsRegsType = lawsRegsTypeRepository.create(typeData);
        await lawsRegsTypeRepository.save(lawsRegsType);
        console.log(`‚úÖ Created Laws/Regs Type: ${typeData.type_name}`);
      }
    }
  } catch (error) {
    console.error('‚ùå Error creating sample laws/regs types:', error);
  }
}

export async function createSamplePerfResultsTypes() {
  try {
    const perfResultsTypeRepository = AppDataSource.getRepository(PerfResultsType);
    
    const samplePerfResultsTypes = [
      { type_name: '‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏õ‡∏µ' },
      { type_name: '‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™' },
      { type_name: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô' },
      { type_name: '‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö' }
    ];

    for (const typeData of samplePerfResultsTypes) {
      const existing = await perfResultsTypeRepository.findOne({
        where: { type_name: typeData.type_name }
      });

      if (!existing) {
        const perfResultsType = perfResultsTypeRepository.create(typeData);
        await perfResultsTypeRepository.save(perfResultsType);
        console.log(`‚úÖ Created Performance Results Type: ${typeData.type_name}`);
      }
    }
  } catch (error) {
    console.error('‚ùå Error creating sample performance results types:', error);
  }
}

export async function createSampleProcurementPlanTypes() {
  try {
    const procurementPlanTypeRepository = AppDataSource.getRepository(ProcurementPlanType);
    
    const sampleProcurementPlanTypes = [
      { type_name: '‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏ã‡∏∑‡πâ‡∏≠‡∏à‡∏±‡∏î‡∏à‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏õ‡∏µ' },
      { type_name: '‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏ã‡∏∑‡πâ‡∏≠‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå' },
      { type_name: '‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏à‡πâ‡∏≤‡∏á‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£' },
      { type_name: '‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏ã‡∏∑‡πâ‡∏≠‡∏ß‡∏±‡∏™‡∏î‡∏∏' }
    ];

    for (const typeData of sampleProcurementPlanTypes) {
      const existing = await procurementPlanTypeRepository.findOne({
        where: { type_name: typeData.type_name }
      });

      if (!existing) {
        const procurementPlanType = procurementPlanTypeRepository.create(typeData);
        await procurementPlanTypeRepository.save(procurementPlanType);
        console.log(`‚úÖ Created Procurement Plan Type: ${typeData.type_name}`);
      }
    }
  } catch (error) {
    console.error('‚ùå Error creating sample procurement plan types:', error);
  }
}

export async function createAllSampleData() {
  console.log('üå± Creating sample data for all entities...');
  
  await createSamplePostTypes();
  await createSampleLawsRegsTypes();
  await createSamplePerfResultsTypes();
  await createSampleProcurementPlanTypes();
  
  console.log('‚úÖ All sample data created successfully');
}